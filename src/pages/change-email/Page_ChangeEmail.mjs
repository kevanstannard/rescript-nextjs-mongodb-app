// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Common_Url from "../../modules/common/Common_Url.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Client_User from "../../modules/client/Client_User.mjs";
import * as Common_User from "../../modules/common/Common_User.mjs";
import * as Router from "next/router";
import * as Page_ChangeEmail_View from "./Page_ChangeEmail_View.mjs";

function initialState(param) {
  return {
          email: "",
          isSubmitting: false,
          errors: {
            changeEmail: undefined,
            email: undefined
          }
        };
}

function reducer(state, action) {
  switch (action.TAG | 0) {
    case /* SetEmail */0 :
        return {
                email: action._0,
                isSubmitting: state.isSubmitting,
                errors: state.errors
              };
    case /* SetIsSubmitting */1 :
        return {
                email: state.email,
                isSubmitting: action._0,
                errors: state.errors
              };
    case /* SetErrors */2 :
        return {
                email: state.email,
                isSubmitting: state.isSubmitting,
                errors: action._0
              };
    
  }
}

function renderPage(user) {
  var match = React.useReducer(reducer, {
        email: "",
        isSubmitting: false,
        errors: {
          changeEmail: undefined,
          email: undefined
        }
      });
  var dispatch = match[1];
  var state = match[0];
  var router = Router.useRouter();
  var onChangeEmailClick = function (param) {
    var changeEmail = {
      email: state.email
    };
    var changeEmailErrors = Common_User.ChangeEmail.validateChangeEmail(changeEmail);
    Curry._1(dispatch, {
          TAG: /* SetErrors */2,
          _0: changeEmailErrors
        });
    if (Common_User.ChangeEmail.hasErrors(changeEmailErrors)) {
      return ;
    }
    Curry._1(dispatch, {
          TAG: /* SetIsSubmitting */1,
          _0: true
        });
    var onError = function (param) {
      Curry._1(dispatch, {
            TAG: /* SetErrors */2,
            _0: {
              changeEmail: "RequestFailed",
              email: undefined
            }
          });
      return Curry._1(dispatch, {
                  TAG: /* SetIsSubmitting */1,
                  _0: false
                });
    };
    var onSuccess = function (json) {
      if (json.result === "Error") {
        Curry._1(dispatch, {
              TAG: /* SetErrors */2,
              _0: json.errors
            });
        return Curry._1(dispatch, {
                    TAG: /* SetIsSubmitting */1,
                    _0: false
                  });
      } else {
        router.push(Common_Url.changeEmailSuccess(undefined));
        return ;
      }
    };
    Client_User.changeEmail(changeEmail, onSuccess, onError);
    
  };
  var changeEmailError = Belt_Option.map(state.errors.changeEmail, Common_User.ChangeEmail.changeEmailErrorToString);
  var emailError = Belt_Option.map(state.errors.email, Common_User.ChangeEmail.emailErrorToString);
  return React.createElement(Page_ChangeEmail_View.make, {
              user: user,
              email: state.email,
              onEmailChange: (function (email) {
                  return Curry._1(dispatch, {
                              TAG: /* SetEmail */0,
                              _0: email
                            });
                }),
              onChangeEmailClick: onChangeEmailClick,
              isSubmitting: state.isSubmitting,
              changeEmailError: changeEmailError,
              emailError: emailError
            });
}

function $$default(param) {
  return renderPage(Common_User.User.fromDto(param.userDto));
}

export {
  initialState ,
  reducer ,
  renderPage ,
  $$default ,
  $$default as default,
  
}
/* react Not a pure module */
