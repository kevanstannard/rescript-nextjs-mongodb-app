// Generated by ReScript, PLEASE EDIT WITH CARE

import Swr from "swr";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Client_Fetch from "../../modules/client/Client_Fetch.mjs";
import * as Page_Signup_View from "./Page_Signup_View.mjs";

function initialState(param) {
  return {
          email: "",
          password: "",
          reCaptcha: undefined,
          isSubmitting: false
        };
}

function reducer(state, action) {
  switch (action.TAG | 0) {
    case /* SetEmail */0 :
        return {
                email: action._0,
                password: state.password,
                reCaptcha: state.reCaptcha,
                isSubmitting: state.isSubmitting
              };
    case /* SetPassword */1 :
        return {
                email: state.email,
                password: action._0,
                reCaptcha: state.reCaptcha,
                isSubmitting: state.isSubmitting
              };
    case /* SetReCaptcha */2 :
        return {
                email: state.email,
                password: state.password,
                reCaptcha: action._0,
                isSubmitting: state.isSubmitting
              };
    case /* SetIsSubmitting */3 :
        return {
                email: state.email,
                password: state.password,
                reCaptcha: state.reCaptcha,
                isSubmitting: action._0
              };
    
  }
}

function useCurrentUser(param) {
  var match = Swr("/api/user", Client_Fetch.getJson);
  return Caml_option.undefined_to_opt(match.data);
}

function renderPage(config) {
  var match = React.useReducer(reducer, {
        email: "",
        password: "",
        reCaptcha: undefined,
        isSubmitting: false
      });
  var dispatch = match[1];
  var state = match[0];
  var onSignupClick = function (param) {
    var signup_email = state.email;
    var signup_password = state.password;
    var signup_reCaptcha = state.reCaptcha;
    var signup = {
      email: signup_email,
      password: signup_password,
      reCaptcha: signup_reCaptcha
    };
    console.log(signup);
    
  };
  return React.createElement(Page_Signup_View.make, {
              reCaptchaSiteKey: config.reCaptcha.siteKey,
              email: state.email,
              emailError: undefined,
              password: state.password,
              passwordError: undefined,
              reCaptchaError: undefined,
              isSubmitting: state.isSubmitting,
              error: undefined,
              onEmailChange: (function (email) {
                  return Curry._1(dispatch, {
                              TAG: /* SetEmail */0,
                              _0: email
                            });
                }),
              onPasswordChange: (function (password) {
                  return Curry._1(dispatch, {
                              TAG: /* SetPassword */1,
                              _0: password
                            });
                }),
              onReCaptchaChange: (function (password) {
                  return Curry._1(dispatch, {
                              TAG: /* SetReCaptcha */2,
                              _0: password
                            });
                }),
              onSignupClick: onSignupClick
            });
}

function $$default(param) {
  return renderPage(param.config);
}

export {
  initialState ,
  reducer ,
  useCurrentUser ,
  renderPage ,
  $$default ,
  $$default as default,
  
}
/* swr Not a pure module */
