// Generated by ReScript, PLEASE EDIT WITH CARE

import * as $$String from "rescript/lib/es6/string.js";
import * as Validator from "validator";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";

function isValid(validation) {
  if (Belt_Option.isNone(validation.name) && Belt_Option.isNone(validation.email) && Belt_Option.isNone(validation.message)) {
    return Belt_Option.isNone(validation.reCaptcha);
  } else {
    return false;
  }
}

function hasErrors(validation) {
  return !isValid(validation);
}

function validateEmail(email) {
  var emailTrimmed = $$String.trim(email);
  if (Validator.isEmpty(emailTrimmed)) {
    return "EmailEmpty";
  } else if (!Validator.isEmail(emailTrimmed)) {
    return "EmailInvalid";
  } else {
    return ;
  }
}

function validateName(name) {
  var nameTrimmed = $$String.trim(name);
  if (Validator.isEmpty(nameTrimmed)) {
    return "NameEmpty";
  }
  
}

function validateMessage(message) {
  var messageTrimmed = $$String.trim(message);
  if (Validator.isEmpty(messageTrimmed)) {
    return "MessageEmpty";
  }
  
}

function validateReCaptcha(reCaptcha) {
  if (reCaptcha !== undefined) {
    return ;
  } else {
    return "ReCaptchaEmpty";
  }
}

function validateContact(param) {
  return {
          name: validateName(param.name),
          email: validateEmail(param.email),
          message: validateMessage(param.message),
          reCaptcha: validateReCaptcha(param.reCaptcha)
        };
}

function emailErrorToString(error) {
  if (error === "EmailInvalid") {
    return "Enter a valid email address";
  } else {
    return "Enter an email address";
  }
}

function nameErrorToString(error) {
  return "Enter a name";
}

function messageErrorToString(error) {
  return "Enter a message";
}

function reCaptchaErrorToString(error) {
  return "Are you sure you're a robot?";
}

export {
  isValid ,
  hasErrors ,
  validateEmail ,
  validateName ,
  validateMessage ,
  validateReCaptcha ,
  validateContact ,
  emailErrorToString ,
  nameErrorToString ,
  messageErrorToString ,
  reCaptchaErrorToString ,
  
}
/* validator Not a pure module */
