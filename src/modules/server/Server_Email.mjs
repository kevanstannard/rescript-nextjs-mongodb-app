// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Js_exn from "rescript/lib/es6/js_exn.js";
import * as $$Promise from "@ryyppy/rescript-promise/src/Promise.mjs";
import * as Common_Url from "../common/Common_Url.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Server_Config from "./Server_Config.mjs";
import * as Mail from "@sendgrid/mail";

function send(message) {
  var config = Server_Config.get(undefined);
  Mail.setApiKey(config.sendGrid.apiKey);
  return Mail.send(message);
}

function getSystemName(param) {
  return "ReScript NextJS MongoDB App";
}

function getSystemUrl(param) {
  return "https://rescript-nextjs-mongodb-app.vercel.app";
}

function makeEmailAddress(emailName, emailAddress) {
  return emailName + " <" + emailAddress + ">";
}

function makeUrl(path) {
  return "https://rescript-nextjs-mongodb-app.vercel.app" + path;
}

function makeSubject(subject) {
  return "ReScript NextJS MongoDB App" + " " + subject;
}

function getSystemEmail(param) {
  var match = Server_Config.get(undefined);
  var system = match.system;
  return makeEmailAddress(system.emailName, system.emailAddress);
}

function errorToString(error) {
  var name = Belt_Option.getWithDefault(error.name, "Unknown");
  var stack = Belt_Option.getWithDefault(error.stack, "Unknown");
  return [
            name,
            stack
          ].join("\n\n");
}

function unknownExnToString(exn) {
  var json;
  try {
    json = JSON.stringify(exn);
  }
  catch (exn$1){
    json = undefined;
  }
  if (json !== undefined) {
    return json;
  } else {
    return "Unknown";
  }
}

function exnToString(exn) {
  if (exn.RE_EXN_ID === $$Promise.JsError || exn.RE_EXN_ID === Js_exn.$$Error) {
    return errorToString(exn._1);
  } else {
    return unknownExnToString(exn);
  }
}

function sendExceptionEmail(userEmail, url, exn) {
  var email = Belt_Option.getWithDefault(userEmail, "Unknown");
  var time = "Time: " + new Date().toISOString();
  var user = "User: " + email;
  var url$1 = "URL: " + url;
  var exnText = exnToString(exn);
  var text = [
      time,
      user,
      url$1,
      exnText
    ].join("\n\n");
  return send({
              to: getSystemEmail(undefined),
              from: getSystemEmail(undefined),
              subject: "ReScript NextJS MongoDB App" + " Error",
              text: text
            });
}

function sendContactEmail(contact) {
  return send({
              to: getSystemEmail(undefined),
              from: makeEmailAddress(contact.name, contact.email),
              subject: "ReScript NextJS MongoDB App" + " " + "Contact",
              text: contact.message
            });
}

function sendActivationEmail(userId, userEmail, activationKey) {
  var path = Common_Url.activate(userId, activationKey);
  var url = "https://rescript-nextjs-mongodb-app.vercel.app" + path;
  var text = [
      "Thanks for signing up with " + "ReScript NextJS MongoDB App" + ".",
      "",
      "Please visit the following link to activate your account:",
      "",
      url,
      "",
      "ReScript NextJS MongoDB App",
      "https://rescript-nextjs-mongodb-app.vercel.app"
    ].join("\n");
  return send({
              to: userEmail,
              from: getSystemEmail(undefined),
              subject: "ReScript NextJS MongoDB App" + " " + "Activation",
              text: text
            });
}

function sendForgotPasswordEmail(userId, userEmail, resetPasswordKey) {
  var path = Common_Url.resetPassword(userId, resetPasswordKey);
  var url = "https://rescript-nextjs-mongodb-app.vercel.app" + path;
  var text = [
      "We've received a request to reset your password.",
      "",
      "If you did not make this request, you can safely ignore this email.",
      "",
      "Otherwise, please visit the following link to reset your password.",
      "",
      url,
      "",
      "ReScript NextJS MongoDB App",
      "https://rescript-nextjs-mongodb-app.vercel.app"
    ].join("\n");
  return send({
              to: userEmail,
              from: getSystemEmail(undefined),
              subject: "ReScript NextJS MongoDB App" + " " + "Reset Password",
              text: text
            });
}

function sendEmailChangeEmail(userId, userEmail, emailChangeKey) {
  var path = Common_Url.changeEmailConfirm(userId, emailChangeKey);
  var url = "https://rescript-nextjs-mongodb-app.vercel.app" + path;
  var text = [
      "We've received a request to change your email address.",
      "",
      "Please visit the following link to confirm your new email address.",
      "",
      url,
      "",
      "ReScript NextJS MongoDB App",
      "https://rescript-nextjs-mongodb-app.vercel.app"
    ].join("\n");
  return send({
              to: userEmail,
              from: getSystemEmail(undefined),
              subject: "ReScript NextJS MongoDB App" + " " + "Confirm Change Email",
              text: text
            });
}

export {
  send ,
  getSystemName ,
  getSystemUrl ,
  makeEmailAddress ,
  makeUrl ,
  makeSubject ,
  getSystemEmail ,
  errorToString ,
  unknownExnToString ,
  exnToString ,
  sendExceptionEmail ,
  sendContactEmail ,
  sendActivationEmail ,
  sendForgotPasswordEmail ,
  sendEmailChangeEmail ,
  
}
/* Server_Config Not a pure module */
