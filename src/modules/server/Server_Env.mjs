// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Js_exn from "rescript/lib/es6/js_exn.js";
import * as $$String from "rescript/lib/es6/string.js";
import * as Js_dict from "rescript/lib/es6/js_dict.js";
import * as Process from "process";
import * as Belt_Int from "rescript/lib/es6/belt_Int.js";

var env = Process.env;

function getString(name) {
  var value = Js_dict.get(env, name);
  if (value !== undefined) {
    return value;
  } else {
    return Js_exn.raiseError("Environment variable " + name + " is missing");
  }
}

function getOptionString(name) {
  var value = Js_dict.get(env, name);
  if (value === undefined) {
    return ;
  }
  var value$1 = $$String.trim(value);
  if (value$1.length === 0) {
    return ;
  } else {
    return value$1;
  }
}

function getInt(name) {
  var value = getString(name);
  var valueInt = Belt_Int.fromString(value);
  if (valueInt !== undefined) {
    return valueInt;
  } else {
    return Js_exn.raiseError("Environment variable " + name + " is invalid");
  }
}

function getNodeEnv(param) {
  return getString("NODE_ENV");
}

export {
  env ,
  getString ,
  getOptionString ,
  getInt ,
  getNodeEnv ,
  
}
/* env Not a pure module */
